{"version":3,"sources":["src/components/Login/LoginPage.js","src/contexts/TodosContext.js","src/components/TodoView/Footer.js","src/components/Todo/Header.js","src/components/Todo/Body.js","src/components/Todo/Todo.js","src/components/TodoView/TodoList.js","src/components/TodoView/TodoView.js","App.js"],"names":["navigation","useForm","defaultValues","username","password","handleSubmit","register","setValue","control","reset","errors","formState","console","log","View","style","styles","container","accessibilityLabel","Text","label","render","field","onChange","onBlur","value","TextInput","input","onChangeText","name","rules","required","secureTextEntry","button","Button","buttonInner","title","onPress","data","Alert","alert","text","navigate","StyleSheet","create","color","margin","marginLeft","marginTop","height","backgroundColor","borderRadius","flex","justifyContent","paddingTop","Constants","statusBarHeight","padding","borderWidth","borderColor","TodosContext","createContext","Footer","useContext","todos","setTodos","useState","newTodo","setNewTodo","placeholder","currentName","length","substring","key","uuidv4","description","alignItems","flexDirection","Header","props","todo","filter","currTodo","Body","Todo","TodoList","ScrollView","map","toString","Todoview","useEffect","getData","storeData","a","async","AsyncStorage","getItem","jsonValue","todosArray","JSON","parse","stringify","setItem","Provider","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","component","LoginPage","TodoView"],"mappings":"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","file":"static/js/app.22215072.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, TextInput, Button, Alert } from \"react-native\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constants from \"expo-constants\";\r\n\r\nexport default ({ navigation }) => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n  const onSubmit = (data) => {\r\n    if (data.username === \"todouser\" && data.password === \"todopassword\") {\r\n      Alert.alert(\"Login Successful\", \"Opening Todo List ...\", [\r\n        {\r\n          text: \"Ok\",\r\n          onPress: () => {\r\n            navigation.navigate(\"Todo List\");\r\n            console.log(\"Login successful and redirect to Todo View\");\r\n          },\r\n        },\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => {\r\n            console.log(\"Login successful but cancel to redirect\");\r\n          },\r\n        },\r\n      ]);\r\n    } else {\r\n      Alert.alert(\"Login Failed\", \"Wrong Username and Password\", [\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => console.log(\"Login failed try again\"),\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const onChange = (arg) => {\r\n    return {\r\n      value: arg.nativeEvent.text,\r\n    };\r\n  };\r\n\r\n  console.log(\"errors\", errors);\r\n\r\n  return (\r\n    <View style={styles.container} accessibilityLabel=\"tLoginPageView\">\r\n      <Text style={styles.label}>Username</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n            accessibilityLabel=\"tUsernameTextInput\"\r\n          />\r\n        )}\r\n        name=\"username\"\r\n        rules={{ required: true }}\r\n      />\r\n      <Text style={styles.label}>Password</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            secureTextEntry={true}\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n            accessibilityLabel=\"tPasswordTextInput\"\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        rules={{ required: true }}\r\n      />\r\n\r\n      <View style={styles.button}>\r\n        <Button\r\n          style={styles.buttonInner}\r\n          title=\"Login\"\r\n          onPress={handleSubmit(onSubmit)}\r\n          accessibilityLabel=\"tLoginButton\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.button}>\r\n        <Button\r\n          style={styles.buttonInner}\r\n          title=\"Reset\"\r\n          accessibilityLabel=\"tResetButton\"\r\n          onPress={() => {\r\n            reset({\r\n              username: \"todouser\",\r\n              password: \"todopassword\",\r\n            });\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: \"black\",\r\n    margin: 20,\r\n    marginLeft: 0,\r\n  },\r\n  button: {\r\n    marginTop: 40,\r\n    color: \"#000\",\r\n    height: 40,\r\n    backgroundColor: \"#63a4ff\",\r\n    borderRadius: 4,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    padding: 8,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#1b6110\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n","import { createContext } from 'react';\r\n\r\nexport const TodosContext = createContext({});\r\n","import React, { useContext, useState } from 'react';\r\nimport { View, StyleSheet, TextInput, Button } from 'react-native';\r\nimport { TodosContext } from '../../contexts/TodosContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Footer() {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  function addTodoHandler() {\r\n    if (newTodo !== '') {\r\n      let currentName =\r\n        newTodo.length <= 10 ? newTodo : `${newTodo.substring(0, 10)}...`;\r\n      setTodos([\r\n        {\r\n          key: uuidv4(),\r\n          name: currentName,\r\n          description: newTodo,\r\n        },\r\n        ...todos,\r\n      ]);\r\n      setNewTodo('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        placeholder='Type your Todo here'\r\n        style={styles.input}\r\n        value={newTodo}\r\n        accessibilityLabel=\"AddTodoTextInput\"\r\n        onChangeText={(text) => setNewTodo(text)}\r\n      />\r\n      <Button title='Add' style={styles.button} onPress={addTodoHandler} accessibilityLabel=\"TodoFooterAddButton\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    margin: 10,\r\n  },\r\n  input: {\r\n    flex: 2,\r\n    margin: 5,\r\n    borderWidth: 1,\r\n    padding: 2,\r\n    borderColor: '#1b6110',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Button, StyleSheet, Text, View } from 'react-native';\r\nimport { TodosContext } from '../../contexts/TodosContext';\r\n\r\nexport default function Header(props) {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n\r\n  function handleDeleteTodo() {\r\n    setTodos(todos.filter((currTodo) => currTodo.key !== props.todo.key));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container} accessibilityLabel=\"TodoHeaderView\">\r\n      <Text style={styles.text} accessibilityLabel=\"TodoHeaderText\">{props.todo.name}</Text>\r\n      <Button style={styles.button} title='x' onPress={handleDeleteTodo} accessibilityLabel=\"TodoHeaderDeleteButton\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'row',\r\n  },\r\n  text: {\r\n    flex: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default function Body(props) {\r\n  return (\r\n    <View style={styles.container} accessibilityLabel=\"TodoBodyView\">\r\n      <Text>{props.todo.description}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","import { StyleSheet, Text, View } from 'react-native';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\n\r\nexport default function Todo(props) {\r\n  return (\r\n    <View style={styles.container} accessibilityLabel=\"tTodoComponentView\">\r\n      <Header todo={props.todo} />\r\n      <Body todo={props.todo} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#d9d9d9',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { TodosContext } from '../../contexts/TodosContext';\r\nimport Todo from '../Todo/Todo';\r\n\r\nexport default function TodoList() {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n\r\n  return (\r\n    <View style={styles.container} accessibilityLabel=\"TodoListContainer\">\r\n      <ScrollView>\r\n        {todos.map((todo) => (\r\n          <Todo todo={todo} key={todo.key.toString()} />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 6,\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Platform } from \"react-native\";\r\nimport Constants from 'expo-constants';\r\nimport Footer from \"./Footer\";\r\nimport TodoList from \"./TodoList\";\r\nimport { TodosContext } from \"../../contexts/TodosContext\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst TODOS_STORAGE_KEY = \"@TodoStorageKeyBwPx0r9Ou2\";\r\n\r\nexport default function Todoview() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    storeData(todos);\r\n  }, [todos]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(TODOS_STORAGE_KEY);\r\n      const todosArray = jsonValue != null ? JSON.parse(jsonValue) : [];\r\n      setTodos(todosArray);\r\n    } catch (e) {\r\n      // error reading value\r\n      alert(\"Failed to load Todo\");\r\n    }\r\n  };\r\n\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value);\r\n      await AsyncStorage.setItem(TODOS_STORAGE_KEY, jsonValue);\r\n    } catch (e) {\r\n      // saving error\r\n      alert(\"Failed to store Todo\");\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container} accessibilityLabel=\"tTodoPageView\">\r\n      {/* <Header /> */}\r\n      <TodosContext.Provider value={{ todos, setTodos }}>\r\n        <TodoList />\r\n        <Footer />\r\n      </TodosContext.Provider>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      // marginTop: Constants.statusBarHeight,\r\n      // marginLeft: Platform.OS !== 'web' ? 10 : '10%',\r\n      // marginRight: Platform.OS !== 'web' ? 10 : '10%',\r\n      alignItems: 'stretch',\r\n    },\r\n  });","import React from \"react\";\r\nimport LoginPage from \"./src/components/Login/LoginPage\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport TodoView from \"./src/components/TodoView/TodoView\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Login\" component={LoginPage} />\r\n        <Stack.Screen name=\"Todo List\" component={TodoView} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}