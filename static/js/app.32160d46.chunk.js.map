{"version":3,"sources":["src/contexts/TodosContext.js","src/components/Footer.js","src/components/Todo/Header.js","src/components/Todo/Body.js","src/components/Todo/Todo.js","src/components/TodoList.js","src/components/Header.js","App.js"],"names":["TodosContext","createContext","Footer","useContext","todos","setTodos","useState","newTodo","setNewTodo","View","style","styles","container","TextInput","placeholder","input","value","onChangeText","text","Button","title","button","onPress","currentName","length","substring","key","uuidv4","name","description","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","margin","borderWidth","padding","borderColor","Header","props","Text","todo","filter","currTodo","Body","Todo","backgroundColor","TodoList","ScrollView","map","toString","headerText","fontSize","fontWeight","color","App","useEffect","getData","storeData","a","async","AsyncStorage","getItem","jsonValue","todosArray","JSON","parse","alert","stringify","setItem","Provider","marginTop","Constants","statusBarHeight","marginLeft","Platform","OS","marginRight"],"mappings":"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","file":"static/js/app.32160d46.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const TodosContext = createContext({});\r\n","import React, { useContext, useState } from 'react';\r\nimport { View, StyleSheet, TextInput, Button } from 'react-native';\r\nimport { TodosContext } from '../contexts/TodosContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Footer() {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  function addTodoHandler() {\r\n    if (newTodo !== '') {\r\n      let currentName =\r\n        newTodo.length <= 10 ? newTodo : `${newTodo.substring(0, 10)}...`;\r\n      setTodos([\r\n        {\r\n          key: uuidv4(),\r\n          name: currentName,\r\n          description: newTodo,\r\n        },\r\n        ...todos,\r\n      ]);\r\n      setNewTodo('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        placeholder='Type your Todo here'\r\n        style={styles.input}\r\n        value={newTodo}\r\n        onChangeText={(text) => setNewTodo(text)}\r\n      />\r\n      <Button title='Add' style={styles.button} onPress={addTodoHandler} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    margin: 10,\r\n  },\r\n  input: {\r\n    flex: 2,\r\n    margin: 5,\r\n    borderWidth: 1,\r\n    padding: 2,\r\n    borderColor: '#1b6110',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n  },\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { Button, StyleSheet, Text, View } from 'react-native';\r\nimport { TodosContext } from '../../contexts/TodosContext';\r\n\r\nexport default function Header(props) {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n\r\n  function handleDeleteTodo() {\r\n    setTodos(todos.filter((currTodo) => currTodo.key !== props.todo.key));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>{props.todo.name}</Text>\r\n      <Button style={styles.button} title='x' onPress={handleDeleteTodo} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'stretch',\r\n    flexDirection: 'row',\r\n  },\r\n  text: {\r\n    flex: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default function Body(props) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>{props.todo.description}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","import { StyleSheet, Text, View } from 'react-native';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\n\r\nexport default function Todo(props) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header todo={props.todo} />\r\n      <Body todo={props.todo} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#d9d9d9',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { TodosContext } from '../contexts/TodosContext';\r\nimport Todo from './Todo/Todo';\r\n\r\nexport default function TodoList() {\r\n  const { todos, setTodos } = useContext(TodosContext);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        {todos.map((todo) => (\r\n          <Todo todo={todo} key={todo.key.toString()} />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 6,\r\n    alignItems: 'stretch',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.headerText}>Todo List</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  headerText: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    color: '#30756d',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport Footer from './src/components/Footer';\r\nimport TodoList from './src/components/TodoList';\r\nimport Header from './src/components/Header';\r\nimport Constants from 'expo-constants';\r\nimport { TodosContext } from './src/contexts/TodosContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst TODOS_STORAGE_KEY = '@TodoStorageKeyBwPx0r9Ou2';\r\n\r\nexport default function App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    storeData(todos);\r\n  }, [todos]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(TODOS_STORAGE_KEY);\r\n      const todosArray = jsonValue != null ? JSON.parse(jsonValue) : [];\r\n      setTodos(todosArray);\r\n    } catch (e) {\r\n      // error reading value\r\n      alert('Failed to load Todo');\r\n    }\r\n  };\r\n\r\n  const storeData = async (value) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(value);\r\n      await AsyncStorage.setItem(TODOS_STORAGE_KEY, jsonValue);\r\n    } catch (e) {\r\n      // saving error\r\n      alert('Failed to store Todo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header />\r\n      <TodosContext.Provider value={{ todos, setTodos }}>\r\n        <TodoList />\r\n        <Footer />\r\n      </TodosContext.Provider>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: Constants.statusBarHeight,\r\n    marginLeft: Platform.OS !== 'web' ? 10 : '10%',\r\n    marginRight: Platform.OS !== 'web' ? 10 : '10%',\r\n    alignItems: 'stretch',\r\n  },\r\n});\r\n"],"sourceRoot":""}